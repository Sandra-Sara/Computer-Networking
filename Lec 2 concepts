concepts lec 2
HTTP uses TCP:
client initiates TCP connection (creates socket) to server,  port 80
server accepts TCP connection from client
HTTP messages (application-layer protocol messages) exchanged between browser (HTTP client) and Web server (HTTP server)
TCP connection closed.

üß© Packet 93
Source: 10.0.0.44
‚Üí This is the client (your local machine or browser).
Destination: 128.119.245.12
‚Üí This is the web server (hosting the webpage).
Protocol: HTTP
Info:
GET /wireshark-labs/HTTP-wireshark-file1.html HTTP/1.1
 This is an HTTP GET request, meaning the client is asking the server for a webpage named
/wireshark-labs/HTTP-wireshark-file1.html.

üß© Packet 95
Source: 128.119.245.12
‚Üí The server responds.
Destination: 10.0.0.44
‚Üí The client receives the response.
Protocol: HTTP
Info:
HTTP/1.1 200 OK (text/html)
 This means the server successfully delivered the requested page, with the content type text/html.

üîÅ Summary of the exchange
Step	Direction	Description
1Ô∏è‚É£	10.0.0.44 ‚Üí 128.119.245.12	Client requests the file HTTP-wireshark-file1.html
2Ô∏è‚É£	128.119.245.12 ‚Üí 10.0.0.44	Server responds with ‚Äú200 OK‚Äù and sends the HTML file
‚öôÔ∏è In simpler terms
Your computer (10.0.0.44) requested a webpage from a remote web server (128.119.245.12), and the server successfully replied with that webpage in HTML format.


HTTP Connections 2 types:Non persistent HTTP,Persistent HTTP(one object can be sent or multiple objects can be sent)
Non-persistent HTTP
TCP connection opened
at most one object sent over TCP connection
TCP connection closed
downloading multiple objects required multiple connections

Persistent HTTP
TCP connection opened to a server
multiple objects can be sent over single TCP connection between client, and that server
TCP connection closed


Non-persistent HTTP example:
1.. HTTP client initiates TCP connection to HTTP server (process) at www.someSchool.edu on port 80.
2.. HTTP server at host www.someSchool.edu waiting for TCP connection at port 80  ‚Äúaccepts‚Äù connection, notifying client.
3.HTTP client sends HTTP request message (containing URL) into TCP connection socket. Message indicates that client wants object someDepartment/home.index.
4.HTTP server receives request message, forms response message containing requested object, and sends message into its socket.
5. HTTP server closes TCP connection.
6.. HTTP client receives response message containing html file, displays html.  Parsing html file, finds 10 referenced jpeg  objects.
7.. Steps 1-6 repeated for each of 10 jpeg objects.


RTT (definition): time for a small packet to travel from client to server and back
HTTP response time (per object):
one RTT to initiate TCP connection
one RTT for HTTP request and first few bytes of HTTP response to return
object/file transmission time
Non-persistent HTTP response time =  2RTT+ file transmission  time


Non-persistent HTTP issues:
requires 2 RTTs per object.
OS overhead for each TCP connection.
browsers often open multiple parallel TCP connections to fetch referenced objects in parallel.

Persistent  HTTP (HTTP1.1):
server leaves connection open after sending response
subsequent HTTP messages  between same client/server sent over open connection
client sends requests as soon as it encounters a referenced object
as little as one RTT for all the referenced objects (cutting response time in half)


üß© 1. Request Line
method  sp  URL  sp  version  cr  lf
method ‚Üí the type of HTTP request, e.g.
GET, POST, PUT, DELETE, etc.
Example: GET
URL ‚Üí the resource the client wants from the server.
Example: /wireshark-labs/HTTP-wireshark-file1.html
version ‚Üí the HTTP version being used.
Example: HTTP/1.1
sp ‚Üí space character
cr lf ‚Üí carriage return + line feed (end of line)
GET /wireshark-labs/HTTP-wireshark-file1.html HTTP/1.1

Methods of HTTP request message
POST method:
web page often includes form input
user input sent from client to server in entity body of HTTP POST request .

GET method (for sending data to server):
include user data in URL field of HTTP GET request message (following a ‚Äò?‚Äô):

HEAD method:
requests headers (only) that would be returned if specified URL were requested  with an HTTP GET method.

PUT method:
uploads new file (object) to server
completely replaces file that exists at specified URL with content in entity body of POST HTTP request message



